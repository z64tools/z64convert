WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'C:\\Users\\zelda\\Desktop\\Z64scene\\room1.objex'
WARNING:objex.ObjexWriter.write_object: Mesh Room1 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0030 sec |   0.0030 sec) Finished writing geometry of 'Room1'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0040 sec |   0.0040 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=bpy.data.materials['Material'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200FFA0.tga']}, 'texel0RGB': {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200FFA0.tga']}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200FFA0.tga']} and texel0A {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200FFA0.tga']} into texel0 {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200FFA0.tga']}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.003' name_q='"Material.003"' material=bpy.data.materials['Material.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200CFA0.tga']}, 'texel0RGB': {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200CFA0.tga']}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200CFA0.tga']} and texel0A {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200CFA0.tga']} into texel0 {'uv_scale_u_main': 1.0, 'texgen': False, 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_wrap_v': True, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_layer': '', 'uv_scale_v': 0, 'uv_map': False, 'image': bpy.data.images['RGBA16_0200CFA0.tga']}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0120 sec |   0.0120 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0140 sec |   0.0140 sec) Objex Export Finished
